# Copyright 2011 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# version: live
version: test

application: MY_APPLICATION_NAME


instance_class: B4
basic_scaling:
  max_instances: 10
  idle_timeout: 14m
  
  
skip_files:
- ^\.hg*$
- ^\.pylintrc$
- ^\.idea
- ^\.vs
- ^\.vscode
- ^archive$
- ^bin
- ^obj
- ^testing
- ^venv
- ^\.hg\\.*$
- ^\.tags*
- ^(.*/)?.*~$
- ^(.*/)?.*\.py[co]$
- ^(.*/)?\..*$
- ^!.*$
- ^.*\.pyc$
- ^.*\.bak$
- ^[Tt]humbs\.db$
- ^test.*$

threadsafe: no
runtime: python27
api_version: 1

# Static files remain cached by the browser for 5 min
default_expiration: "5m"

libraries:
- name: django
  version: "1.2"
  
  
error_handlers:
  - file: error_handlers/error_default.html

  - error_code: over_quota
    file: error_handlers/error_over_quota.html
    
  - error_code: dos_api_denial
    file: error_handlers/error_dos.html
  
  - error_code: timeout
    file: error_handlers/error_timeout.html

    
handlers:
- url: /static
  static_dir: static
  secure: always
  

- url: /favicon.ico
  static_files: static/favicon.ico
  upload: favicon.ico
  secure: always
  
- url: /info
  static_files: static/info.html
  upload: info.html
  secure: always
  
- url: /worker
  script: worker.app
  login: admin
  secure: always

- url: /admin/.*
  script: admin.app
  login: admin
  secure: always

# Main page does not require login, so that anyone can read main page before authorising
- url: /
  script: tasks_backup.app
  secure: always

# robots.txt is handled programmatically, because we want to return "disallow all"
# for test servers, but allow robots on the production server. Refer to RobotsHandler()
- url: /robots.txt
  script: tasks_backup.app
  secure: never

# All other pages require user to be logged in
- url: /.+
  script: tasks_backup.app
  login: required
  secure: always


# ============================
# For debug on localhost
# ============================
#- url: /oauth2callback
#  script: oauth2client/appengine.py
